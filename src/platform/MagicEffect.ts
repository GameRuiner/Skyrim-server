import { Art, EffectShader, Explosion, ImageSpaceModifier, ImpactDataSet, Light, Perk } from './Classes';
import { Form } from './Form';
import { Projectile } from './Projectile';
import { Spell } from './Spell';

export interface MagicEffect extends Form {
	from: (form: Form) => MagicEffect;
	clearEffectFlag: (flag: number) => void;
	getArea: () => number;
	getAssociatedSkill: () => Promise<string>;
	getBaseCost: () => number;
	getCastTime: () => number;
	getCastingArt: () => Art;
	getCastingType: () => number;
	getDeliveryType: () => number;
	getEnchantArt: () => Art;
	getEnchantShader: () => EffectShader;
	getEquipAbility: () => Spell;
	getExplosion: () => Explosion;
	getHitEffectArt: () => Art;
	getHitShader: () => EffectShader;
	getImageSpaceMod: () => ImageSpaceModifier;
	getImpactDataSet: () => ImpactDataSet;
	getLight: () => Light;
	getPerk: () => Perk;
	getProjectile: () => Projectile;
	getResistance: () => string;
	getSkillLevel: () => number;
	getSkillUsageMult: () => number;
	getSounds: () => object[];
	isEffectFlagSet: (flag: number) => boolean;
	setArea: (area: number) => void;
	setAssociatedSkill: (skill: string) => void;
	setBaseCost: (cost: number) => void;
	setCastTime: (castTime: number) => void;
	setCastingArt: (obj: Art) => void;
	setEffectFlag: (flag: number) => void;
	setEnchantArt: (obj: Art) => void;
	setEnchantShader: (obj: EffectShader) => void;
	setEquipAbility: (obj: Spell) => void;
	setExplosion: (obj: Explosion) => void;
	setHitEffectArt: (obj: Art) => void;
	setHitShader: (obj: EffectShader) => void;
	setImageSpaceMod: (obj: ImageSpaceModifier) => void;
	setImpactDataSet: (obj: ImpactDataSet) => void;
	setLight: (obj: Light) => void;
	setPerk: (obj: Perk) => void;
	setProjectile: (obj: Projectile) => void;
	setResistance: (skill: string) => void;
	setSkillLevel: (level: number) => void;
	setSkillUsageMult: (usageMult: number) => void;
}
